{"version":3,"sources":["webpack:///./src/validations/validations.js"],"names":["required","properType","v","length","requiredBoolean","requiredObject","minLength","maxLength","emailFormat","regex","test","number","cedula","urlFormat","positivo","telefonoFormat"],"mappings":"gIAAIA,EAAW,SAACC,GACZ,OAAO,SAAAC,GAAC,OAAIA,GAAKA,EAAEC,OAAS,GAAhB,2BAAyCF,KAGrDG,EAAkB,SAACH,GACnB,OAAO,SAAAC,GAAC,OAAIA,GAAU,GAALA,GAAL,uBAAkCD,KAE9CI,EAAiB,SAACJ,GAClB,OAAO,SAAAC,GAAC,OAAIA,GAAW,OAANA,GAAL,2BAAuCD,KAGnDK,EAAY,SAACL,EAAWK,GACxB,OAAO,SAAAJ,GAAC,OAAIA,GAAKA,EAAEC,QAAUG,GAAjB,UAAiCL,EAAjC,gCAAmEK,KAG/EC,EAAY,SAACN,EAAWM,GACxB,OAAO,SAAAL,GAAC,OAAIA,GAAKA,EAAEC,QAAUI,GAAjB,UAAiCN,EAAjC,+BAAkEM,KAG9EC,EAAc,WAEd,IAAIC,EAAQ,2JAEZ,OAAO,SAAAP,GAAC,OAAIA,GAAKO,EAAMC,KAAKR,IAAhB,kCAGZS,EAAS,SAACV,GACV,IAAIQ,EAAS,YACb,OAAO,SAAAP,GAAC,OAAIA,GAAKO,EAAMC,KAAKR,IAAhB,UAAyBD,EAAzB,6BAGZW,EAAS,SAACX,GACV,IAAIQ,EAAQ,wBACZ,OAAO,SAAAP,GAAC,OAAIA,GAAKO,EAAMC,KAAKR,IAAhB,UAAyBD,EAAzB,iBAGZY,EAAY,WAEZ,IAAIJ,EAAQ,gDAEZ,OAAO,SAAAP,GAAC,OAAIA,GAAKO,EAAMC,KAAKR,IAAhB,4BAGZY,EAAW,SAACb,GAEZ,IAAIQ,EAAQ,0EACZ,OAAO,SAAAP,GAAC,OAAIA,GAAKO,EAAMC,KAAKR,IAAhB,UAAyBD,EAAzB,4BAGZc,EAAiB,WAEjB,IAAIN,EAAQ,8CACZ,OAAO,SAAAP,GAAC,OAAIA,GAAKO,EAAMC,KAAKR,IAAhB,0CAGF,QACVF,WACAK,iBACAC,YACAC,YACAC,cACAK,YACAF,SACAC,SACAE,WACAV,kBACAW","file":"js/chunk-2d0c4616.bcb68aa9.js","sourcesContent":["let required = (properType) => {\r\n    return v => v && v.length > 0 || `Debe ingresar un ${properType}`\r\n}\r\n\r\nlet requiredBoolean = (properType) => {\r\n    return v => v && v == true || `Debe aceptar ${properType}`\r\n}\r\nlet requiredObject = (properType)  => {\r\n    return v => v && v !== null || `Debe ingresar un ${properType}`\r\n}\r\n\r\nlet minLength = (properType,minLength) => {\r\n    return v => v && v.length >= minLength || `${properType} debe tener al menos ${minLength}`\r\n}\r\n\r\nlet maxLength = (properType,maxLength) => {\r\n    return v => v && v.length <= maxLength || `${properType} debe ser menor que ${maxLength}`\r\n}\r\n\r\nlet emailFormat = () => {\r\n    // eslint-disable-next-line\r\n    let regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/ \r\n\r\n    return v => v && regex.test(v) || `Debe ingresar un email válido`;\r\n}\r\n\r\nlet number = (properType) => {\r\n    let regex =  /^[1-9]\\d$/ \r\n    return v => v && regex.test(v) || `${properType} debe ser solo numerico`;\r\n}\r\n\r\nlet cedula = (properType) => {\r\n    let regex = /^[V|E|J|P][0-9]{5,9}$/ \r\n    return v => v && regex.test(v) || `${properType} incorrecta`\r\n}\r\n\r\nlet urlFormat = () => {\r\n    // eslint-disable-next-line\r\n    let regex = /^(http|https)\\:\\/\\/[a-z0-9\\.-]+\\.[a-z]{2,4}/gi;\r\n\r\n    return v => v && regex.test(v) || `Debe ser una URL valida`;\r\n}\r\n\r\nlet positivo = (properType) => {\r\n    // eslint-disable-next-line\r\n    let regex = /^[+]?([1-9][0-9]*(?:[\\.][0-9]*)?|0*\\.0*[1-9][0-9]*)(?:[eE][+-][0-9]+)?$/;\r\n    return v => v && regex.test(v) || `${properType} Debe ser mayor a cero`;\r\n}\r\n\r\nlet telefonoFormat = () => {\r\n    // eslint-disable-next-line\r\n    let regex = /^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}/;\r\n    return v => v && regex.test(v) || `debe ser un numero de telefono válido`;\r\n}\r\n\r\nexport default{\r\n    required,\r\n    requiredObject,\r\n    minLength,\r\n    maxLength,\r\n    emailFormat,\r\n    urlFormat,\r\n    number,\r\n    cedula,\r\n    positivo,\r\n    requiredBoolean,\r\n    telefonoFormat\r\n}"],"sourceRoot":""}